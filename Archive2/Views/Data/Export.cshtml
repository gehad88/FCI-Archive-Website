@{
    Layout = "_UserLayout"; // Sets the layout for the page }
}
<head>
    <!-- Add Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css">
</head>

<div class="container text-center mb-5 login-btn">
    <div>
        <h1 style="color:black">Export Message</h1> <!-- Heading for the page -->
        <hr class="w/75" /> <!-- Horizontal line separator -->
    </div>
</div>

<style>
    .input-group {
        width: 50%;
        display: flex;
        justify-content: center;
        margin: 0 auto;
    }

    select {
        width: 150px;
    }

        select:focus {
            min-width: 150px;
            width: auto;
        }
</style>

<style>
    body {
        background-image: url('../login/img/bench-accounting-nvzvopqw0gc-unsplash.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100% 100%;
    }
</style>




<style>
    /* Modal styles */
    #modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 60%;
        max-width: 400px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    /* Selected options styles */
    #selected-options-modal {
        list-style-type: none;
        padding: 0;
    }

    .selected-option-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

        .selected-option-item span {
            padding: 5px;
        }

    .remove-option {
        color: #999;
        cursor: pointer;
    }

        .remove-option:hover {
            color: #555;
        }
</style>


<div class="container rounded mt-5 mb-5">
    <div class="form-group col-md-12">
        <div class="d-flex justify-content-center">
            <label class="labels" for="searchInput"></label>
            <div class="btn-group">
                <button style="color:white; background-color:#B5C1B4; border-color:white" type="button" class="btn btn-primary" id="sortDate">Send Date</button>
                <button style="color:white; background-color:#B5C1B4; border-color:white" type="button" class="btn btn-primary" id="sortTitle">Title/Email</button>
                <div>
                    <input id="searchInput" type="text" class="form-control" placeholder="Enter search keyword" aria-label="Search input" aria-describedby="searchButton">
                </div>
                <button style="color:white; background-color:#B5C1B4; border-color:#B5C1B4" id="searchButton" type="button" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Handle click event on sort buttons
        $('#sortTitleAsc').on('click', function () {
            var sortOption = 'TitleAcs';
            handleSortOption(sortOption);
        });

        $('#sortTitleDesc').on('click', function () {
            var sortOption = 'TitleDesc';
            handleSortOption(sortOption);
        });

        $('#sortDateAsc').on('click', function () {
            var sortOption = 'date_asc';
            handleSortOption(sortOption);
        });

        $('#sortDateDesc').on('click', function () {
            var sortOption = 'date_desc';
            handleSortOption(sortOption);
        });

        $('#sortEmailAsc').on('click', function () {
            var sortOption = 'email_asc';
            handleSortOption(sortOption);
        });

        $('#sortEmailDesc').on('click', function () {
            var sortOption = 'email_desc';
            handleSortOption(sortOption);
        });

        // Handle search button click
        $('#searchButton').on('click', function () {
            var searchQuery = $('#searchInput').val();

            // Build the URL with the search query as a query parameter
            var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}`;

            // Redirect to the URL
            window.location.href = url;
        });
    });

    // Function to handle sorting option selection
    function handleSortOption(sortOption) {
        // Get the search query from the input
        var searchQuery = $('#searchInput').val();

        // Build the URL with the search query and sorting option as query parameters
        var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}&sortOption=${sortOption}`;

        // Redirect to the URL
        window.location.href = url;
    }
    $(document).ready(function () {
        // Handle click event on sort buttons
        $('#sortDate').on('click', function () {
            $('#searchInput').attr('type', 'date');
        });

        $('#sortTitle').on('click', function () {
            $('#searchInput').attr('type', 'text');
        });

        // Handle search button click
        $('#searchButton').on('click', function () {
            var searchQuery = $('#searchInput').val();

            // Build the URL with the search query as a query parameter
            var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}`;

            // Redirect to the URL
            window.location.href = url;
        });
    });
</script>


<div class="container rounded mt-5 mb-5">


    <div class="form-group col-md-12">
        <label class="labels" for="sortOption"></label>
        <div class="btn-group">
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortTitleAsc">Title(Ascending)</button>
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortTitleDesc">Title (Descending)</button>
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortDateAsc">Send Date (Ascending)</button>
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortDateDesc">Send Date (Descending)</button>
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortEmailAsc">Email (Ascending)</button>
            <button style="color:#657863; background-color:#DCD9C6; border-color:#DCD9C6" type="button" class="btn btn-primary" id="sortEmailDesc">Email (Descending)</button>
        </div>
    </div>
    <div id="datatable"></div>
    <div dir="ltr">
        <table class="table table-striped table-hover">
            <thead class="table-light">
                <tr>
                    <th scope="col">Date</th>
                    <th scope="col">Title</th>
                    <th scope="col">Recipients</th>
                    <th scope="col">Message</th>
                </tr>
            </thead>
            <tbody id="searchResults">
                <!-- Render the initial search results on page load using server-side code -->
                @foreach (var item in ViewBag.messages) // Loops through the messages from the server-side
                {
                    <tr>
                        <td>@item.SendDate</td>
                        <td>@item.Title</td>
                        <td>
                            <button class="btn btn-outline-primary btn-sm rounded-0 show-recipients-button" type="button"
                                    data-recipients="@item.MessageDestination" data-toggle="tooltip" data-placement="top"
                                    title="Show Recipients">
                                <i class="fa fa-users"></i>
                                Show Recipients

                            </button>
                        </td>
                        <td>
                            <a href="/User/ViewMessage/@item.MessagesId" class="btn btn-outline-primary btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Show">
                                <i class="fa fa-table"></i>Show
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add Bootstrap JS dependencies -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Function to display the pop-up message with formatted recipients
    function displayRecipientsMessage(recipientsMessage) {
        // Create the modal element
        const modal = document.createElement('div');
        modal.id = 'modal';
        modal.classList.add('modal');

        // Create the modal content
        const modalContent = document.createElement('div');
        modalContent.classList.add('modal-content');

        // Create the close button
        const closeButton = document.createElement('span');
        closeButton.classList.add('close');
        closeButton.innerHTML = '&times;';

        // Create the recipients list
        const recipientsList = document.createElement('ul');
        recipientsList.id = 'selected-options-modal';

        // Split the recipients message by newlines
        const recipients = recipientsMessage.split('\n');

        // Create and append each recipient as a list item
        recipients.forEach(function (recipient) {
            const listItem = document.createElement('li');
            listItem.classList.add('selected-option-item');
            listItem.innerHTML = `<span>${recipient}</span>`;
            recipientsList.appendChild(listItem);
        });

        // Append the close button and recipients list to the modal content
        modalContent.appendChild(closeButton);
        modalContent.appendChild(recipientsList);

        // Append the modal content to the modal element
        modal.appendChild(modalContent);

        // Append the modal element to the body
        document.body.appendChild(modal);

        // Add event listener for the close button
        closeButton.addEventListener('click', function () {
            modal.style.display = 'none';
        });

        // Add event listener for clicks outside the modal
        window.addEventListener('click', function (event) {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Display the modal
        modal.style.display = 'block';
    }

    // Function to handle the "Show Recipients" button click
    function handleShowRecipients() {
        // Get the recipients' addresses from the button's data attribute
        var recipients = this.getAttribute('data-recipients');

        // Split recipients by comma
        var recipientList = recipients.split(',');

        // Create a formatted list of recipients with numbering
        var formattedRecipients = recipientList.map(function (email, index) {
            var sentence = (index + 1) + '. ' + email.trim();
            return sentence;
        });

        // Join the sentences with newlines
        var recipientsMessage = formattedRecipients.join('\n');

        // Display the formatted recipients in a pop-up message
        displayRecipientsMessage(recipientsMessage);
    }

    // Get all the "Show Recipients" buttons
    var showRecipientsButtons = document.querySelectorAll('.show-recipients-button');

    // Add event listener for each "Show Recipients" button click
    showRecipientsButtons.forEach(function (button) {
        button.addEventListener('click', handleShowRecipients);
    });
</script>

