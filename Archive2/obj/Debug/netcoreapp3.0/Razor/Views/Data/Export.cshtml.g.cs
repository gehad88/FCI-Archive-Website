#pragma checksum "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3454c65d9aeae7e4550604ad29174995c487fa62"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Data_Export), @"mvc.1.0.view", @"/Views/Data/Export.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\_ViewImports.cshtml"
using Archive2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\_ViewImports.cshtml"
using Archive2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3454c65d9aeae7e4550604ad29174995c487fa62", @"/Views/Data/Export.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e686de7ce6e2b4c2b71065f22d651816412f73e2", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Data_Export : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
  
    Layout = "_UserLayout"; // Sets the layout for the page }

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3454c65d9aeae7e4550604ad29174995c487fa623507", async() => {
                WriteLiteral("\r\n    <!-- Add Bootstrap CSS -->\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css\">\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""container text-center mb-5 login-btn"">
    <div>
        <h1 style=""color:black"">Export Message</h1> <!-- Heading for the page -->
        <hr class=""w/75"" /> <!-- Horizontal line separator -->
    </div>
</div>

<style>
    .input-group {
        width: 50%;
        display: flex;
        justify-content: center;
        margin: 0 auto;
    }

    select {
        width: 150px;
    }

        select:focus {
            min-width: 150px;
            width: auto;
        }
</style>

<style>
    body {
        background-image: url('../login/img/bench-accounting-nvzvopqw0gc-unsplash.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100% 100%;
    }
</style>




<style>
    /* Modal styles */
    #modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-col");
            WriteLiteral(@"or: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 60%;
        max-width: 400px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    /* Selected options styles */
    #selected-options-modal {
        list-style-type: none;
        padding: 0;
    }

    .selected-option-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

        .selected-option-item span {
            padding: 5px;
        }

    .remove-option {
        color: #999;
        cursor: pointer;
    }

        .remove-option:hover {
          ");
            WriteLiteral(@"  color: #555;
        }
</style>


<div class=""container rounded mt-5 mb-5"">
    <div class=""form-group col-md-12"">
        <div class=""d-flex justify-content-center"">
            <label class=""labels"" for=""searchInput""></label>
            <div class=""btn-group"">
                <button style=""color:white; background-color:#B5C1B4; border-color:white"" type=""button"" class=""btn btn-primary"" id=""sortDate"">Send Date</button>
                <button style=""color:white; background-color:#B5C1B4; border-color:white"" type=""button"" class=""btn btn-primary"" id=""sortTitle"">Title/Email</button>
                <div>
                    <input id=""searchInput"" type=""text"" class=""form-control"" placeholder=""Enter search keyword"" aria-label=""Search input"" aria-describedby=""searchButton"">
                </div>
                <button style=""color:white; background-color:#B5C1B4; border-color:#B5C1B4"" id=""searchButton"" type=""button"" class=""btn btn-primary"">Search</button>
            </div>
        </div>
 ");
            WriteLiteral(@"   </div>
</div>



<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
<script>
    $(document).ready(function () {
        // Handle click event on sort buttons
        $('#sortTitleAsc').on('click', function () {
            var sortOption = 'TitleAcs';
            handleSortOption(sortOption);
        });

        $('#sortTitleDesc').on('click', function () {
            var sortOption = 'TitleDesc';
            handleSortOption(sortOption);
        });

        $('#sortDateAsc').on('click', function () {
            var sortOption = 'date_asc';
            handleSortOption(sortOption);
        });

        $('#sortDateDesc').on('click', function () {
            var sortOption = 'date_desc';
            handleSortOption(sortOption);
        });

        $('#sortEmailAsc').on('click', function () {
            var sortOption = 'email_asc';
            handleSortOption(sortOption);
        });

        $('#sortEmailDesc').on('click', function () {
        ");
            WriteLiteral(@"    var sortOption = 'email_desc';
            handleSortOption(sortOption);
        });

        // Handle search button click
        $('#searchButton').on('click', function () {
            var searchQuery = $('#searchInput').val();

            // Build the URL with the search query as a query parameter
            var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}`;

            // Redirect to the URL
            window.location.href = url;
        });
    });

    // Function to handle sorting option selection
    function handleSortOption(sortOption) {
        // Get the search query from the input
        var searchQuery = $('#searchInput').val();

        // Build the URL with the search query and sorting option as query parameters
        var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}&sortOption=${sortOption}`;

        // Redirect to the URL
        window.location.href = url;
    }
    $(docume");
            WriteLiteral(@"nt).ready(function () {
        // Handle click event on sort buttons
        $('#sortDate').on('click', function () {
            $('#searchInput').attr('type', 'date');
        });

        $('#sortTitle').on('click', function () {
            $('#searchInput').attr('type', 'text');
        });

        // Handle search button click
        $('#searchButton').on('click', function () {
            var searchQuery = $('#searchInput').val();

            // Build the URL with the search query as a query parameter
            var url = `https://localhost:44339/data/Export?query=${encodeURIComponent(searchQuery)}`;

            // Redirect to the URL
            window.location.href = url;
        });
    });
</script>


<div class=""container rounded mt-5 mb-5"">


    <div class=""form-group col-md-12"">
        <label class=""labels"" for=""sortOption""></label>
        <div class=""btn-group"">
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=");
            WriteLiteral(@"""button"" class=""btn btn-primary"" id=""sortTitleAsc"">Title(Ascending)</button>
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=""button"" class=""btn btn-primary"" id=""sortTitleDesc"">Title (Descending)</button>
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=""button"" class=""btn btn-primary"" id=""sortDateAsc"">Send Date (Ascending)</button>
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=""button"" class=""btn btn-primary"" id=""sortDateDesc"">Send Date (Descending)</button>
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=""button"" class=""btn btn-primary"" id=""sortEmailAsc"">Email (Ascending)</button>
            <button style=""color:#657863; background-color:#DCD9C6; border-color:#DCD9C6"" type=""button"" class=""btn btn-primary"" id=""sortEmailDesc"">Email (Descending)</button>
        </div>
    </div>
    <div id=""datatable""></div>
    ");
            WriteLiteral(@"<div dir=""ltr"">
        <table class=""table table-striped table-hover"">
            <thead class=""table-light"">
                <tr>
                    <th scope=""col"">Date</th>
                    <th scope=""col"">Title</th>
                    <th scope=""col"">Recipients</th>
                    <th scope=""col"">Message</th>
                </tr>
            </thead>
            <tbody id=""searchResults"">
                <!-- Render the initial search results on page load using server-side code -->
");
#nullable restore
#line 238 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
                 foreach (var item in ViewBag.messages) // Loops through the messages from the server-side
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>");
#nullable restore
#line 241 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
                       Write(item.SendDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 242 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
                       Write(item.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>\r\n                            <button class=\"btn btn-outline-primary btn-sm rounded-0 show-recipients-button\" type=\"button\"\r\n                                    data-recipients=\"");
#nullable restore
#line 245 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
                                                Write(item.MessageDestination);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" data-toggle=""tooltip"" data-placement=""top""
                                    title=""Show Recipients"">
                                <i class=""fa fa-users""></i>
                                Show Recipients

                            </button>
                        </td>
                        <td>
                            <a");
            BeginWriteAttribute("href", " href=\"", 8750, "\"", 8791, 2);
            WriteAttributeValue("", 8757, "/User/ViewMessage/", 8757, 18, true);
#nullable restore
#line 253 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
WriteAttributeValue("", 8775, item.MessagesId, 8775, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""btn btn-outline-primary btn-sm rounded-0"" type=""button"" data-toggle=""tooltip"" data-placement=""top"" title=""Show"">
                                <i class=""fa fa-table""></i>Show
                            </a>
                        </td>
                    </tr>
");
#nullable restore
#line 258 "D:\SW Engineering\Sixth term\Software Development\Project\Project\Software-Development-Project\Archive2\Views\Data\Export.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            </tbody>
        </table>
    </div>
</div>

<!-- Add Bootstrap JS dependencies -->
<script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.bundle.min.js""></script>
<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
<script>
    // Function to display the pop-up message with formatted recipients
    function displayRecipientsMessage(recipientsMessage) {
        // Create the modal element
        const modal = document.createElement('div');
        modal.id = 'modal';
        modal.classList.add('modal');

        // Create the modal content
        const modalContent = document.createElement('div');
        modalContent.classList.add('modal-content');

        // Create the close button
        const closeButton = document.createElement('span');
        closeButton.classList.add('close');
        closeButton.innerHTML = '&times;';

 ");
            WriteLiteral(@"       // Create the recipients list
        const recipientsList = document.createElement('ul');
        recipientsList.id = 'selected-options-modal';

        // Split the recipients message by newlines
        const recipients = recipientsMessage.split('\n');

        // Create and append each recipient as a list item
        recipients.forEach(function (recipient) {
            const listItem = document.createElement('li');
            listItem.classList.add('selected-option-item');
            listItem.innerHTML = `<span>${recipient}</span>`;
            recipientsList.appendChild(listItem);
        });

        // Append the close button and recipients list to the modal content
        modalContent.appendChild(closeButton);
        modalContent.appendChild(recipientsList);

        // Append the modal content to the modal element
        modal.appendChild(modalContent);

        // Append the modal element to the body
        document.body.appendChild(modal);

        // Add eve");
            WriteLiteral(@"nt listener for the close button
        closeButton.addEventListener('click', function () {
            modal.style.display = 'none';
        });

        // Add event listener for clicks outside the modal
        window.addEventListener('click', function (event) {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Display the modal
        modal.style.display = 'block';
    }

    // Function to handle the ""Show Recipients"" button click
    function handleShowRecipients() {
        // Get the recipients' addresses from the button's data attribute
        var recipients = this.getAttribute('data-recipients');

        // Split recipients by comma
        var recipientList = recipients.split(',');

        // Create a formatted list of recipients with numbering
        var formattedRecipients = recipientList.map(function (email, index) {
            var sentence = (index + 1) + '. ' + email.trim();
          ");
            WriteLiteral(@"  return sentence;
        });

        // Join the sentences with newlines
        var recipientsMessage = formattedRecipients.join('\n');

        // Display the formatted recipients in a pop-up message
        displayRecipientsMessage(recipientsMessage);
    }

    // Get all the ""Show Recipients"" buttons
    var showRecipientsButtons = document.querySelectorAll('.show-recipients-button');

    // Add event listener for each ""Show Recipients"" button click
    showRecipientsButtons.forEach(function (button) {
        button.addEventListener('click', handleShowRecipients);
    });
</script>

");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
